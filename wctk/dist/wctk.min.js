class t{#t;#e=!1;constructor(t){this.#t=t}get queued(){return this.#e}render(){this.#e||(this.#e=!0,queueMicrotask((()=>{this.#e=!1,this.#t.render()})))}}class e{#s;#r;constructor(t,e){this.#s=t.attachInternals(),this.#r=null!==this.#s.shadowRoot,this.#r||t.attachShadow(e)}get internals(){return this.#s}get declarative(){return this.#r}get shadowRoot(){return this.#s.shadowRoot}}class s{#o;constructor(t,e){this.#o=t,this.#o.adoptedStyleSheets=r(e)}set adoptedStylesheets(t){this.#o.adoptedStyleSheets=r(t)}}function r(t){let e=[];for(let s of t)if(s instanceof CSSStyleSheet&&e.push(s),"string"==typeof s){const t=new CSSStyleSheet;t.replaceSync(s),e.push(t)}return e}export{t as Render,e as Shadow,s as Styles};
