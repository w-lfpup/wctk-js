class t{#t;#e=!1;constructor(t){this.#t=t}get queued(){return this.#e}render(){this.#e||(this.#e=!0,queueMicrotask((()=>{this.#e=!1,this.#t.render()})))}}class e{#n;#s;constructor(t,e){this.#n=t.attachInternals(),this.#s=null!==this.#n.shadowRoot,this.#s||t.attachShadow(e)}get internals(){return this.#n}get declarative(){return this.#s}get shadowRoot(){return this.#n.shadowRoot}}class n{#o=!1;#t;#c=[];constructor(t,e){this.#t=t;for(let[t,n]of e){let e=n;e instanceof Function&&(e=e.bind(this.#t)),this.#c.push([t,e])}}connect(){if(!this.#o){this.#o=!0;for(let[t,e]of this.#c)this.#t.addEventListener(t,e)}}disconnect(){if(this.#o){this.#o=!1;for(let[t,e]of this.#c)this.#t.removeEventListener(t,e)}}}class s{#o=!1;#t;#i;#h;#r;constructor(t,e,n){this.#t=t,this.#h=e,this.#r=n}connect(){this.#o||(this.#o=!0,this.#i=this.#h(this.#t))}disconnect(){this.#o&&(this.#o=!1,this.#r(this.#t,this.#i))}}class o{#l;constructor(t,e){this.#l=t,this.#l.adoptedStyleSheets=c(e)}set adoptedStylesheets(t){this.#l.adoptedStyleSheets=c(t)}}function c(t){let e=[];for(let n of t)if(n instanceof CSSStyleSheet&&e.push(n),"string"==typeof n){const t=new CSSStyleSheet;t.replaceSync(n),e.push(t)}return e}function i(t,e){t.adoptedStyleSheets=c(e)}export{n as Events,t as Render,e as Shadow,o as Styles,s as Subscription,i as addStyles};
